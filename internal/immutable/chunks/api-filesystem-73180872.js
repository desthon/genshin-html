import{d as F,s as S,e as A,f as D,g as E,h as v,p as B,j as k,k as I,l as M,n as R,o as W,q as N,r as $,u as f,w as p,x as C,y as V,z as q,A as z,B as K}from"./app-stores-3a3a5ec5.js";import{H as w,B as L,A as m}from"./banner-custom-05bf887c.js";import{s,b as r}from"./index-e93f33b3.js";import{w as l}from"./index-5ebc5471.js";import{c as P}from"./api-cookie-d587b0da.js";import{r as T}from"./toast-41a2f8d8.js";const{clearIDB:j}=w,G=async()=>{const t=await caches.keys();for(const e of t)await caches.delete(e);return!0},it=async({clearCache:t=!1,keepSetting:e=!1}={})=>{if(await j(),t&&await G(),F.set({point:null,selected:null}),S.set(!0),A.set(20),e){const d=s.get("config"),x=s.get("pity"),b=s.get("balance"),h=s.get("probabilityRates"),g=s.get("export");localStorage.removeItem("WishSimulator.App"),s.set("config",d),s.set("pity",x),s.set("balance",b),s.set("probabilityRates",h),g?.id&&s.set("export",g);return}const a=r.get("locale"),i=s.get("export");localStorage.removeItem("WishSimulator.App"),a&&r.set("locale",a),i?.id&&s.set("export",i);const{fates:o,genesis:u,primogem:y}=K;D.set(o),E.set(o),v.set(u),B.set(y),k.set(0),I.set(0),M.set(0),R.set(0),W.set({}),N.set(!1),r.set("storageVersion",$),r.set("version",`${f}-${p}`),C.set({patch:f,phase:p}),V.set(0),q.set(!1),z.set("default")},c=l({}),H=l(!1),n=l(!1),J=()=>{const{id:t}=s.get("export"),e=t||`GI${T(111111111,999999999)}`,a=new Date;s.set("export",{id:e,date:a})},O=async()=>{const t=await L.getAll(),e=await w.getAllHistories(),a=P.get("accessKey");J();const i=s.getData(),o={banners:t,histories:e,settings:i,accessKey:a};return JSON.stringify(o)},ot=t=>isNaN(t)?"...B":`${(t/(1024*1024)).toFixed(2)}MB`,Q=async t=>{if(!t)return c.set({});const{name:e,size:a,webkitRelativePath:i,lastModified:o}=await t.getFile();c.set({name:e,size:a,webkitRelativePath:i,lastModified:o})},U=async()=>{await m.delete("savedFile"),c.set({}),H.set(!1)},X=async t=>{try{return await t.getFile()}catch{return U(),!1}},Y=async(t,e)=>{if(t.createWriter){const i=await t.createWriter();await i.write(0,e),await i.close();return}const a=await t.createWritable();await a.write(e),await a.close()},rt=async()=>{try{n.set(!0);const{fileHandle:t}=await m.get("savedFile");if(!t)return n.set(!1);if(!await X(t))throw new Error("Destination File does not exist, Auto Export will be turned off");const a=await O();await Y(t,a),await Q(t),n.set(!1)}catch(t){console.error("Auto Export Failed:",t.message),n.set(!1)}};export{H as a,ot as b,G as c,it as f,rt as r};
